"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SshAgent = void 0;
var promptx = `
Ты сеньер разработчик, ты должен выполнять задачи закзчика.
Для выполнения задачи ты можешь только взаимодействовать с терминалом по ssh. 
Твой интерфейс взаимодействия с терминалом выглядит так: {comand: 'npm run start'} .
Команды в терминал давай с помощью такого объета JSON. Ты можешь отвечать по одной командеи и заканчивай сообщение.
Ты быдешь получать 
`;
// `Ты агент который ходит по сайтам и выполняет действия, которые приказал пользователь.
//     у тебя есть интерфейс взаимодействия с браузером. Ты должен отвечать согласно этому формату JSON:
//     {type: 'тип действия', action: 'действие'} type может быть 'gotourl' и click, 'gotourl' - это переход по ссылке, при нем action может быть только ссылка на сайт,
//     например: {type: 'gotourl', action: 'https://ollama.com/search?c=vision'}. type 'click' - это нажатие в нужном тебе месте страницы, формат {x: координата, y: координата}
//     например: {type: 'click', action: {x: 10, y: 24}} . type 'move' - это наведение мыши, например: {type: 'move', action: {x: 10, y: 24}} .
//     Строго следуй формату, генерируй только одно действие и заканчивай.
//     Полупрозрачный красный круг с черной обводкой на фото это там где находится курсор.
//     Координаты курсора: {x: ${x}, y: ${y}} .
//     URL где ты сейчас находишься: ${myURL} .
//     Страницу сайта которая сейчас отображается перед тобой ты можешь видеть в фото.
//     Приказ пользователя который ты должен выполнить конечным действием: 'Включи мне музыку на моей странице вконтакте'`
const prmt = `
 Задача, вывести все рабочие процесы!
 Ты можешь использовать предоставленные програмные интерфейсы для достижения результата.
 Обращаться к интерфейсам можно таким форматом: {name: 'название инструмента', data: 'запрос к инструменту', comment: 'кросткое пояснение к действию'}
 Програмные интерфейсы описаны в таком формате: [{name: название инструмента, description: описание инструмента, data: формат данных}, ...]
 Список програмных интерфейсов:
 `;
var mcp1 = {
    name: 'terminal',
    description: 'терминал операциооной системы ubuntu',
    data: 'строка, команда для терминала например',
};
let mcp = [];
mcp.push(mcp1);
class SshAgent {
}
exports.SshAgent = SshAgent;
